{
    "contents" : "# rm(list=ls()); gc()\nsource(\"./runtimeFunctions.R\")\nlibrary(stringr)\nlibrary(data.table)\nlibrary(sqldf)\nrequire(tcltk)\n\n#library(tidyr)\n\n\n#load(\"./predictTDMdt.RData\")\n\ndefault<-c(\"Excellent\",\"Impressive\",\"Responsive\", \"Intuitive\",\"Well-designed\",\"Informative\", \"Novel\", \"Well-Done\", \"Ambitious\")\ndeftin<-\"This application is\"\ndefnw<-3\n\n\n\n\n#object.size(predictTDMdt)/1024\ntestD<-\"This application is\"\ntest1<-\" My name is     not Sam\"\ntest2<-\"fuck didn't i say i didnt wany any\"\ntest3<-\" go to \"\n\ntest4<-sample(predictTDMdt$Phrase,1)\ntest4\n\ntestBlank<-\"\"\n\ntest<-test4\ncleanPhrase<-cleanText(test)\n\ndtIn<-dtInput(cleanPhrase)\n(dtIn)\n#head(predictTDMdt)\n\nsz<-3\n\npredictOut<-predictOutput(dtIn)\n\ng1<-as.matrix(predictOut[1:sz,1],dimnames = list(NULL,\"Words\"))\n\n\n#predict\n# \n# triResult<-sqldf(\"select w, TrigramProbability as Probability from predictTDMdt join dtIn using (Trigram) order by TrigramProbability DESC limit 10\")\n# biResult<-sqldf(\"select w, BigramProbability  as Probability from predictTDMdt join dtIn using (Bigram) order by BigramProbability DESC limit 10\")\n# \n# #maxContinuationProbability <-sqldf(\"select max(ContinuationProbability) from predictTDMdt\")\n# uniResult<-sqldf(\"select w, ContinuationProbability  as Probability from predictTDMdt  order by ContinuationProbability desc limit 20\")\n\n# \n# predictResultTable<-sqldf(\"select w,  Probability from triResult\n#         UNION select w,  .4*Probability from biResult\n#         UNION select w,  .4*.4*Probability from uniResult\")\n\n\n#unigrams has many with same probability, randomize so will be different\nuniResult<-fn$sqldf(\"select distinct w, ContinuationProbability from predictTDMdt order by ContinuationProbability Desc limit 100\")\nuniResult$r100<-sample(1:100, 100, replace=FALSE)\nuniResultTable<-sqldf(\"select w, ContinuationProbability from uniResult  order by r100 limit 20\")\n  \npredictResultTable<-sqldf(\"select w, 3+ TrigramProbability as Probability from predictTDMdt join dtIn using (Trigram) \n        UNION select w, 2+ BigramProbability  as Probability from predictTDMdt join dtIn using (Bigram) \n        UNION select w, 1+ContinuationProbability  as Probability from uniResultTable  \n                          order by Probability desc\")\n#words may not be distinct\npredictResultTableSum<-sqldf(\"select w, max(Probability) as Probability from predictResultTable group by w\")\n#get top 5\npredictResultCloud<-predictResultTableSum\npredictResultCloud$Probability<-predictResultCloud$Probability*10\n\nwordcloud_rep<-repeatable(wordcloud)\nwordcloud(predictResultCloud$w,predictResultCloud$Probability,max.words = 20, scale=c(3.5,0.2), colors=brewer.pal(4,\"Dark2\"))\n\npredictResult<-sqldf(\"select w, Probability from predictResultTableSum order by Probability DESC limit 5\")\n\ng1<-as.matrix(predictResult[1:5,1],dimnames <- list(NULL, \"Words\"))\ndimnames(g1)<-list(NULL, \"Words\")\n\n\n\n\n\n  defaultR<-runif(length(default))\n  wordcloud_rep(default,defaultR, max.words = length(default), scale=c(3.5,0.2), colors=brewer.pal(4,\"Dark2\"))\n\n",
    "created" : 1430092257142.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2971964495",
    "id" : "E1638CEF",
    "lastKnownWriteTime" : 1430094535,
    "path" : "~/GitHub/dsCapstone/shiny/PredictInput.R",
    "project_path" : "shiny/PredictInput.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}