{
    "contents" : "# This is the user-interface definition of a Shiny web application.\n# You can find out more about building applications with Shiny here:\n# \n# http://www.rstudio.com/shiny/\n#\n\ncat(sprintf(\"Total memory=%.2f MB\\n\", memory.size()))\n\nlibrary(shiny)\n\nshinyUI(fluidPage(\n  \n  # Application title\n  div(titlePanel(\"Predict Words\"), style = \"color:blue\"),\n  #titlePanel(\"Text Predicition\"),\n  \n  # Sidebar with a slider input for number of bins\n  sidebarPanel(\n    #verbiage\n    h4('The application will attempt to predict the next word in the phrase'),\n    helpText(\"Instructions:\"),\n    helpText(\"1 Type in a phrase\"),\n    helpText(\"2. Select the number of words or guesses to return. You can select one, three or five, words\"),  \n    helpText(\"3. Click the Predict Button\"),\n    #uiOutput('resetable_input'),\n    textInput('tin',\n              label=h4('Phrase'),\n              value = \"This application is\"),\n    \n    radioButtons(\"nw\", label = h4(\"Words\"),choices = list(\"One\" = 1, \"Three\" = 3, \"Five\" = 5),selected = 3),\n    submitButton(text = \"Make Prediction\", icon = icon(\"question\",  lib = \"font-awesome\")),\n   hr() ,\n   fluidRow(\n     column(8,h6('Contact Me')),\n     column(4,a(img(src=\"gmail.png\", height = 30, width = 30), href=\"mailto:bob.stober@gmail.com\"))\n    ),\n   fluidRow(\n     column(8, h6('Bob Stober at Linked In')),\n     column(4,a(img(src=\"linkedin-sociocon.png\", height = 30, width = 30), href=\"https://www.linkedin.com/in/bobstober\"))\n   )\n   ,\n   fluidRow(\n     column(8,h6('This application was built with Rstudio and Shiny')),\n     column(4,a(img(src=\"RStudio-Ball.png\", height = 30, width = 30), href=\"http://www.rstudio.com/\"))\n   )\n   #h6('This application was built with Rstudio and Shiny'),\n   #a(img(src=\"RStudio-Ball.png\", height = 30, width = 30)),\n#    h6('Bob Stober at Linked In'),\n#    a(img(src=\"RStudio-Ball.png\", height = 30, width = 30), href=\"https://www.linkedin.com/in/bobstober\")\n        \n  ), # end of side panel\n    \n  # Main\n  mainPanel(\n    tabsetPanel(type = \"tabs\", \n      tabPanel(\"Prediction\",\n        h4('This application demonstrates text prediction.Text prediction is an example of Natural Language processing or NLP'),\n        br(),   \n        fluidRow(\n          column(7,h4('The number of words to predict is')),\n          column(5,verbatimTextOutput(\"nw\"))\n          ),\n        fluidRow(\n          column(7,h4('Your incomplete phrase is')),\n          column(5,verbatimTextOutput(\"tin\"))\n        ),\n        fluidRow(\n          column(7,h4('The cleaned phrase is')),\n          column(5,verbatimTextOutput(\"cleanPhrase\"))\n        ),\n\n        fluidRow(\n          column(7,h4(\"Thinking about some words...\")),\n          column(5,h4('My guess is '))\n        ),\n        \n          fluidRow(\n            column(7,a(img(src = \"cloud0.png\")) ),\n            #column(7,imageOutput(\"cloud\")),\n            column(5,br(),br(),tableOutput(\"predict\"))\n        )\n        \n#       h4('Thinking about some words '),\n#       plotOutput(\"Cloud\"),\n#       h4('My guess is '),\n#       tableOutput(\"predict\") \n        ), # end predict tab\n      tabPanel(\"Help\",\n               \n               h4('Explanation'),\n               h5('Type in the phrase for which the application will predict the next word.\n                    You can think of what of your own, or copy and paste a pharse from the news or twitter\n                    On the main panel you will see the original phrase and the cleaned up phrase as well. \n                    Notice the start token that is used to represent the beginning oof the sentence.\n                    '),\n               hr(),\n               h5('You can select the number of words to return. The choices are One, Thre or five.\n                  When seekcting one word the single best choice is returned. If two words happen to have the exact same probablity\n                  the one that comes first aplhabetically will be returned.\n                  You can further the range of returned words and see some of the other top choices available. This is more reflective of an keyboard\n                  application, where a few words may be presented from which to choose.\n                  choose.'),\n               hr(),\n               h5('The predicted words appear as a grid. They are ranked by probability. \n                  A word cloud image is presented fror illustrative purposes.\n                  '),\n               hr(),\n               h5('For more information on the modeling process, check out the Modeling tab.')\n              \n               ), #end help tab\n      tabPanel(\"Modeling\",\n         h4('The modeling process steps:'),\n         helpText(\"1. Download Files and Extract from Archive\"),\n         helpText(\"2. Read Files In\"),\n         helpText(\"3. Clean Data and Save as RData Files\"),\n         helpText(\"4. Create Sample Data and Save as RData Files\"),\n         helpText(\"5. Build N-Gram Frequency Tables and Save as RData Files\"),\n         helpText(\"6. Build Predictive Data Table and Save as RData File\"),\n         helpText(\"7. Split Predictive Data Table into Train and Test\"),\n         helpText(\"8. Build Predicitve Frequency Models from Train\"),\n         helpText(\"9. Evaluate Accuracy Against Test\"),\n         helpText(\"10. If Accuracy is NOT Satisfacory, Go back to Previous Step\"),\n         helpText(\"11. If Accuracy is NOT Satisfacory, Save Predictive Data Table for use in Application\"),\n         \n         br()   \n), #end help tab\n      tabPanel(\"RunTime\",\n               h4('RunTime Environment'),\n               br() ,\n               tableOutput('env')\n      ) #end Runtime tab\n  ) # end tab panel\n  )\n))\n",
    "created" : 1429962781211.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2017411141",
    "id" : "1A94429E",
    "lastKnownWriteTime" : 1430071010,
    "path" : "~/GitHub/dsCapstone/shiny/ui.R",
    "project_path" : "shiny/ui.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}